DDL - CREATE     테이블, 유저, 데이터베이스, 인덱스 등 새로운 데이터베이스 객체 생성
      ALTER     기존 테이블이나 데이터베이스 객체의 구조를 변경 (열 추가, 삭제 수정 등)
      DROP      테이블, 데이터 베이스 객체를 완전히 삭제(데이터와 구조 모두 삭제)
                       
(설계도)
	TRUNCATE = 테이블 내의 데이터를 모두 삭제하고 테이블만 유지
                delete와 다르게 rollback 못함

DML - INSERT UPDATE  DELETE
(가구배치)
    DQL - SELECT

DCL - GRANT  권한을 줌
      REVOKE 권한 해제
(열쇠)

TCL - COMMIT ROLLBACK SAVEPOINT

/*
트랜잭션
Atomicity(원자성) : 트랜잭션에 포함된 작업이 모두 성공하거나 실패해야함
                    중간에 일부만 실행 X
                    예 ) 은행 송금 시 계좌 A에서 돈이 빠져나갔는데 
                        계좌 B에 입금이 안되면 안되기 때문에 둘 중 하나만 실행할 수 없다

Consistency(일관성) : 트랜잭션이 실행되기 전과 후의 데이터 상태가 일관되어야 함
                     예) 은행 C 계좌 총액이 10만 원 이었다면,A,B 나 다른 거래들이 일어났을 때도 10만 원 이어야함
                             C 가 계좌 송금 출금 과 같은 행위를 하지 않는 한

Isolation(격리성)   : 여러 트랜잭션이 동시에 실행될 때, 서로의 작업에 영향을 주면 안됨
                     예) 두 사람이 동시에 같은 계좌에서 돈을 빼려면 충돌이 일어날 수 있으니
                        하나씩 순서대로 처리

Durability(지속성)  : 트랜잭션이 완료된 후의 결과는 영구적으로 저장
                     예) 시스템이 갑자기 다운되어도 성공적으로 완료된 거래 결과는 유지되어야함
                             은행에서 5만 원 송금 후 서비스 점검으로 1시간 후 계좌 확인을 했을 때
                             송금내역이 존재해야함

*/